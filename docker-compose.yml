version: "3.1"

services:
  go-api:
    container_name: go-api
    build:
      context: ./go
      dockerfile: ./Dockerfile
    environment:
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_DATABASE: database
    ports:
      - "80:3000"

  node-api:
    container_name: node-api
    build:
      context: ./node
      dockerfile: ./Dockerfile
    environment:
      HOST: 0.0.0.0
      PORT: 3000
      DB_URL: "postgresql://postgres:password@postgres:5432/database"
    ports:
      - "80:3000"

  python-sync-api:
    container_name: python-sync-api
    build:
      context: ./python_sync
      dockerfile: ./Dockerfile
    environment:
      HOST: 0.0.0.0
      PORT: 3000
      DB_HOST: "postgres"
      DB_NAME: database
    ports:
      - "80:3000"

  python-async-api:
    container_name: python-async-api
    build:
      context: ./python_async
      dockerfile: ./Dockerfile
    environment:
      HOST: 0.0.0.0
      PORT: 3000
      DB_HOST: "postgres"
      DB_NAME: database
    ports:
      - "80:3000"

  postgres:
    image: postgres:latest
    container_name: performance-test-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata:
